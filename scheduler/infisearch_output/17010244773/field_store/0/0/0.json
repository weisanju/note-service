[[["_relative_fp","quartz/index.html"],["title","quartz - 定时任务调度"],["body","\n    \n        \n        \n\n        \n        \n\n        \n        \n\n        \n        \n\n        \n\n        \n\n            \n                                \n                \n                    \n                        "],["body","\n                            \n                        "],["body","\n                        "],["body","\n                            \n                        "],["body","\n                        \n                            "],["body","Light"],["body","\n                            "],["body","Rust"],["body","\n                            "],["body","Coal"],["body","\n                            "],["body","Navy"],["body","\n                            "],["body","Ayu"],["body","\n                        \n                    \n\n                    "],["heading","定时任务调度"],["body","\n\n                    \n\n                    \n                \n\n\n                \n                \n\n                \n                    "],["body","\n                        \n\n"],["body","\n"],["body","\n\n"],["headingLink","quartz-scheduler"],["heading","quartz-scheduler"],["body","\n\n"],["body","Quartz 是功能强大的开源作业调度库，几乎可以集成到任何 Java 应用程序中，从最小的独立应用程序到最大的电子商务系统。Quartz 可用于创建简单或复杂的计划，以执行数以万计的工作；可以执行您编写的所有内容。"],["body","\n"],["body","Quartz Scheduler 包含许多企业级功能，例如对 JTA 事务和集群的支持。Quartz 是免费使用的，并根据 Apache 2.0 许可获得许可"],["body","\n\n"],["body","Quartz 官网：Quartz Enterprise Job Scheduler\n二进制 jar 包下载地址：Downloads\n官网文档：Documentation\ngithub 开源地址：https://github.com/quartz-scheduler/quartz"],["body","\n"],["headingLink","核心概念"],["heading","核心概念"],["body","\n"],["body","任务构建器（JobBuilder）->任务(Job)->任务详情(JobDetail)->任务调度器(Scheduler)->触发器(Trigger)<-触发器构建器(TriggerBuilder)"],["body","\n"],["headingLink","quartz-特征quartz-features"],["heading","Quartz 特征（Quartz Features）"],["body","\n"],["headingLink","运行环境runtime-environments"],["heading","运行环境（Runtime Environments）"],["body","\n\n"],["body","Quartz可以在另一个自由独立的应用程序中运行"],["body","\n"],["body","Quartz可以在一个应用服务器中（或者servlet容器中）被实例化，并参与事务处理"],["body","\n"],["body","Quartz可以作为一个独立的的程序（自己的java虚拟机内）运行，被远程接口调用。"],["body","\n"],["body","Quartz可以被实例化为一组独立的程序（拥有负载均衡和故障转移能力）来执行工作。"],["body","\n\n"],["headingLink","任务调度job-scheduling"],["heading","任务调度（Job Scheduling）"],["body","\n"],["body","当一个给定的触发器（Trigger）触发时，任务（Job）将执行。触发器可以被下列指令的任何组合所创建："],["body","\n\n"],["body","一天中的某个特定时间（到毫秒）"],["body","\n"],["body","一周中的特定几天"],["body","\n"],["body","一个月中的特定几天"],["body","\n"],["body","一年中的特定几天"],["body","\n"],["body","日历中非特定的几天（例如商务假期）"],["body","\n"],["body","重复特定次数"],["body","\n"],["body","重复直到某个特定时间"],["body","\n"],["body","无限的重复"],["body","\n"],["body","在特定间隔后重复"],["body","\n\n"],["body","任务（Job）可以被命名并被放置于一个组（Group）中，触发器（Trigger）也可以被命名并被放入一个组（Group）中，这样可以在调度器（scheduler）中很好的的组织安排它们。\n一个任务（Job）只能被调度器（scheduler）添加一次，但是可以注册在多个触发器（Trigger）中。"],["body","\n"],["headingLink","任务执行job-execution"],["heading","任务执行（Job Execution）"],["body","\n\n"],["body","任务（Job）可以是任何实现简单Job接口的Java类，你的类可以执行其他任何操作"],["body","\n"],["body","任务（Job）类的实例可以被Quartz实例化，也可以被应用的框架实例化"],["body","\n"],["body","当一个触发器（Trigger）触发时，调度器（Scheduler）程序将通知实现了JobListener和TriggerListener接口的Java对象（监听器可以是简单的Java对象， 或者EJBs， 或者JMS publishers， etc）。这些监听器在任务（Job）执行完后，也会收到通知"],["body","\n"],["body","当任务（Job）完成时， 他们返回JobCompletionCode （告知调度程序失败或者成功）。JobCompletionCode 还可以指示调度程序（Scheduler）基于成功或者失败执行操作，例如立即重新执行任务（Job）"],["body","\n\n"],["headingLink","任务持久化job-persistence"],["heading","任务持久化（Job Persistence）"],["body","\n\n"],["body","Quartz的设计包括一个JobStore接口的实现，可以提供任务（Job）存储的多种机制。"],["body","\n"],["body","当使用了JDBCJobStore， 所有被配置为非易失的任务（Job）和触发器（Trigger）将通过JDBC存储在关系数据库中"],["body","\n"],["body","当使用了RAMJobStore， 所有的任务（Job）和触发器（Trigger）被存储在RAM中，因此在程序执行时，并不具有持久性，但这不需要外部数据库"],["body","\n\n"],["headingLink","事务transactions"],["heading","事务（Transactions）"],["body","\n\n"],["body","Quartz可以可以通过使用JobStoreCMT（JDBCJobStore的一个子类），参与JTA事务"],["body","\n"],["body","在执行任务（Job）时，Quartz可以管理JTA事务（启动和调用），以便被任务执行的工作在JTA事务中自动执行了。"],["body","\n\n"],["headingLink","集群特征cluster"],["heading","集群特征（Cluster）"],["body","\n\n"],["body","提供故障切换"],["body","\n"],["body","提供负载均衡"],["body","\n"],["body","Quartz的内置集群特征依赖数据库持久化（通过JDBCJobStore）"],["body","\n"],["body","Terracotta ，Quartz的拓展，提供不需要后端数据库支持的集群功能"],["body","\n\n"],["headingLink","监听器插件"],["heading","监听器&&插件"],["body","\n\n"],["body","应用（Application）通过继承listener接口捕获调度事件，来监控或者控制Job/Trigger"],["body","\n"],["body","插件机制可以被用来给Quartz添加功能， 例如保存任务执行的记录，从文件中加载Job/Trigger的定义"],["body","\n"],["body","Quartz可以装载大量的已完成的监听器和插件"],["body","\n\n\n\n\n"],["body","\n\n                    "],["body","\n\n                    \n                \n            \n\n            \n\n        \n\n\n\n\n        \n\n\n\n        \n        \n        \n\n        \n\n\n    \n    \n"]],[["_relative_fp","quartz/2.基本操作.html"],["title","基本操作 - 定时任务调度"],["body","\n    \n        \n        \n\n        \n        \n\n        \n        \n\n        \n        \n\n        \n\n        \n\n            \n                                \n                \n                    \n                        "],["body","\n                            \n                        "],["body","\n                        "],["body","\n                            \n                        "],["body","\n                        \n                            "],["body","Light"],["body","\n                            "],["body","Rust"],["body","\n                            "],["body","Coal"],["body","\n                            "],["body","Navy"],["body","\n                            "],["body","Ayu"],["body","\n                        \n                    \n\n                    "],["heading","定时任务调度"],["body","\n\n                    \n\n                    \n                \n\n\n                \n                \n\n                \n                    "],["body","\n                        \n\n"],["body","\n"],["body","\n\n\n\n\n"],["body","\n\n                    "],["body","\n\n                    \n                \n            \n\n            \n\n        \n\n\n\n\n        \n\n\n\n        \n        \n        \n\n        \n\n\n    \n    \n"]],[["_relative_fp","quartz/1.QuickStart.html"],["title","QuickStart - 定时任务调度"],["body","\n    \n        \n        \n\n        \n        \n\n        \n        \n\n        \n        \n\n        \n\n        \n\n            \n                                \n                \n                    \n                        "],["body","\n                            \n                        "],["body","\n                        "],["body","\n                            \n                        "],["body","\n                        \n                            "],["body","Light"],["body","\n                            "],["body","Rust"],["body","\n                            "],["body","Coal"],["body","\n                            "],["body","Navy"],["body","\n                            "],["body","Ayu"],["body","\n                        \n                    \n\n                    "],["heading","定时任务调度"],["body","\n\n                    \n\n                    \n                \n\n\n                \n                \n\n                \n                    "],["body","\n                        \n\n"],["body","\n"],["body","\n\n"],["headingLink","quartz-quick-start-guide"],["heading","Quartz Quick Start Guide"],["body","\n"],["headingLink","download-and-install"],["heading","Download and Install"],["body","\n"],["body","<dependency>\n\t<groupId>org.quartz-scheduler</groupId>\n\t<artifactId>quartz</artifactId>\n\t<version>2.3.0</version>\n</dependency>\n"],["body","\n"],["headingLink","starting-a-sample-application"],["heading","Starting a Sample Application"],["body","\n"],["body","  import org.quartz.Scheduler;\n  import org.quartz.SchedulerException;\n  import org.quartz.impl.StdSchedulerFactory;\n  import static org.quartz.JobBuilder.*;\n  import static org.quartz.TriggerBuilder.*;\n  import static org.quartz.SimpleScheduleBuilder.*;\n\n  public class QuartzTest {\n\n      public static void main(String[] args) {\n\n          try {\n              // Grab the Scheduler instance from the Factory\n              Scheduler scheduler = StdSchedulerFactory.getDefaultScheduler();\n\n              // and start it off\n              scheduler.start();\n\n              scheduler.shutdown();\n\n          } catch (SchedulerException se) {\n              se.printStackTrace();\n          }\n      }\n  }\n"],["body","\n\n\n\n"],["body","\n\n                    "],["body","\n\n                    \n                \n            \n\n            \n\n        \n\n\n\n\n        \n\n\n\n        \n        \n        \n\n        \n\n\n    \n    \n"]],[["_relative_fp","index.html"],["title","任务调度Quartz - 定时任务调度"],["body","\n    \n        \n        \n\n        \n        \n\n        \n        \n\n        \n        \n\n        \n\n        \n\n            \n                                \n                \n                    \n                        "],["body","\n                            \n                        "],["body","\n                        "],["body","\n                            \n                        "],["body","\n                        \n                            "],["body","Light"],["body","\n                            "],["body","Rust"],["body","\n                            "],["body","Coal"],["body","\n                            "],["body","Navy"],["body","\n                            "],["body","Ayu"],["body","\n                        \n                    \n\n                    "],["heading","定时任务调度"],["body","\n\n                    \n\n                    \n                \n\n\n                \n                \n\n                \n                    "],["body","\n                        \n\n"],["body","\n"],["body","\n\n\n"],["body","Java分布式任务调度框架"],["body","\n"],["body","支持任务持久化、任务暂停、任务恢复、任务更新、任务"],["body","\n"],["body","\n\n\n\n\n                    "],["body","\n\n                    \n                \n            \n\n            \n\n        \n\n\n\n\n        \n\n\n\n        \n        \n        \n\n        \n\n\n    \n    \n"]]]